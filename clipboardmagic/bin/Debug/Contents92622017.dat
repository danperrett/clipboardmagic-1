Hodge, Andrew - UK <andrew.hodge@dynniq.co.uk>; Turner, Tina  - UK <Tina.Turner@dynniq.co.uk>

Accessibility recovered

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\DVTelInterfaceProject

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\ManagedDll.tlb

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\ManagedDll.dll

28228

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\ManagedDll.dll

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\ManagedDll.tlb

SetAdapterStatus

this->adapterStatus->SetStatus("Waiting to Start Monitoring");

SetStatus

vms_configuration 

CONFIG_TABLE

VMS_COMMAND_TABLE

VMS_COMMANDS

vms_configuration 

CONFIG_TABLE

CONFIGURATIONDATE 

 route add 192.168.16.102 mask 255.255.255.0 192.168.16.1 IF 2


C:\Program Files (x86)\Imtech\ImCity\Adapters\VMSAdapte

 route add 192.168.16.102 mask 255.255.255.0 192.168.16.1 IF 2


C:\cctvadapter\omniORB413_vc8_rtd.dll

C:\cctvadapter\omnithread34_vc8_rt.dll

C:\cctvadapter\omnithread34_vc8_rtd.dll

C:\cctvadapter\omniDynamic413_vc8_rt.dll

C:\cctvadapter\omniDynamic413_vc8_rtd.dll

C:\cctvadapter\omniORB413_vc8_rt.dll

10.164.114.182

C:\cctvadapter\omniORB413_vc8_rtd.dll

C:\cctvadapter\omnithread34_vc8_rt.dll

C:\cctvadapter\omnithread34_vc8_rtd.dll

C:\cctvadapter\omniDynamic413_vc8_rt.dll

C:\cctvadapter\omniDynamic413_vc8_rtd.dll

C:\cctvadapter\omniORB413_vc8_rt.dll

C:\Secure\Source\cutlas\Core\Release\VMSAdapter\VMSAsynAdapter.exe




C:\Secure\Source\cutlas\Core\Release\VMSAdapter\VMSAsynAdapter.exe

C:\VMSAdapter\VMSAsynAdapter.exe

Msvsmon.exe

C:\Program Files (x86)\Microsoft Visual Studio 8\Common7\IDE\Remote Debugger

10.164.114.182

29920

Sent-Resent-Failed

select * from vms_configuration where SYSTEMCODENUMBER='VMS031' and CONFIGURATIONDATE = ( select max(CONFIGURATIONDATE) from vms_configuration where SYSTEMCODENUMBER='VMS031'); 

char queryCode[400] = {0}; 

    sprintf(queryCode, "UPDATE SUBSYSTEM_STATUS set STATUS='%s', LASTUPDATED=SYSDATE WHERE SYSTEMCODENUMBER='%s'", Status, AdapterSCN);

std::vector< DeviceObject *> objectSet 

CheckCurrentAndPrevious(DeviceEntry* device, std::vector< DeviceObject *> objectSet)

select * from vms_configuration where SYSTEMCODENUMBER='VMS030' and CONFIGURATIONDATE = ( select max(CONFIGURATIONDATE) from vms_configuration where SYSTEMCODENUMBER='VMS030'); 

DeviceObject *obj

CheckCurrentAndPreviousConfig


URL http://www.bbc.co.uk/sport/live/football/38571746

 vector<DeviceObject *> dob

 vector<DeviceObject *> dob = query(queryCode);
	if(dob.size() > 0)
	{
		int num = 0;
		if(dob[dob.size()-1]->attributes().size() > 0)
		{	
			const char* val = dob[dob.size()-1]->attributes()[0]->value();
			num = atoi(val);
		}
		if(num == 0)return false;
	}

 vector<DeviceObject *> dob =

LANTERNSAVAILABLE

obj->setAttribute(  "HEIGHT" , "(null)" );
  obj->setAttribute(  "WIDTH", "(null)" );
  obj->setAttribute(  "FONTSPACING" , "(null)" );
  obj->setAttribute(  "FONTWIDTH" , "(null)" );
  obj->setAttribute(  "FONTHEIGHT" , "(null)" );

dob[0]

dob[0]->getAttribute("LANTERNSAVAILABLE")

dob[0]->getAttribute( "HEIGHT" );

dob[0]->getAttribute( "WIDTH" )

(strcmp(dob[0]->getAttribute( "WIDTH" ), obj->getAttribute( "WIDTH" ) != 0) ||

CheckCurrentAndPreviousConfig

C:\Secure\Source\cutlas\Core\Release\VMSAdapter\VMSAsynAdapter.exe

sprintf(debug, "%s, %s, %s, %s, %s, %s\0"

obj->getAttribute("LANTERNSAVAILABLE")

obj->getAttribute( "HEIGHT" )

obj->getAttribute( "WIDTH" )

obj->getAttribute( "FONTSPACING" )

obj->getAttribute( "FONTWIDTH" )

obj->getAttribute( "FONTHEIGHT" )

C:\Secure\Source\cutlas\Core\Release\VMSAdapter\VMSAsynAdapter.exe

if(dob[dob.size()-1]->attributes().size() > 0)
		{	
			const char* val = dob[dob.size()-1]->attributes()[0]->value();

C:\Secure\Source\cutlas\Core\Release\VMSAdapter\VMSAsynAdapter.exe

device

C:\Secure\Source\cutlas\Core\Release\VMSAdapter\VMSAsynAdapter.exe

lanterns

height

width

fontspace

fontwidth

fontheight

C:\Secure\Source\cutlas\Core\Release\VMSAdapter\VMSAsynAdapter.exe

createCommsFault

item->GetScn()

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\dvtelagent\DVtelAgent.dll

clearFault

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\dvtelagent\DVtelAgent.dll

INSERT INTO CCTV_COMMANDS (SYSTEMCODENUMBER, COMMANDFORMAT, DATASOURCE_TYPEID, COMMAND, PARAMETERS, PRIORITY) VALUES ('CCTV010', '0', '1261', 'set_preset', '8', '0');
00341: commit;


http://www.bbc.co.uk/news/uk-politics-38813629

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\dvtelagent\DVtelAgent.dll

INSERT INTO CCTV_COMMANDS (SYSTEMCODENUMBER, COMMANDFORMAT, DATASOURCE_TYPEID, COMMAND, PARAMETERS, PRIORITY) VALUES ('CCTV010', '0', '1261', 'set_preset', '1', '0');
commit;


INSERT INTO CCTV_COMMANDS (SYSTEMCODENUMBER, COMMANDFORMAT, DATASOURCE_TYPEID, COMMAND, PARAMETERS, PRIORITY) VALUES ('CCTV010', '0', '1261', 'set_preset', '2', '0');
commit;


INSERT INTO "ADMINUTMC"."TBLSUBSYSTEMFAULTTYPES" (FAULTTYPE, FAULTSEVERITY, FAULTDESCRIPTION, DATASOURCE_TYPEID) values (0,1,'Tyco DVTel Server Offline',1261);
INSERT INTO "ADMINUTMC"."TBLSUBSYSTEMFAULTTYPES" (FAULTTYPE, FAULTSEVERITY, FAULTDESCRIPTION, DATASOURCE_TYPEID) values (1,1,'DVTel CCTV Adapter Internal Fault',1261);

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\dvtelagent\DVtelAgent.dll

10.164.114

RequestSetPreset

processCommand

30534

processCommand

cdbManager

CDBInterfaceManager

1.03 barg

parameterReq

szParameter

parameters

incidentType

incidentSCN

incidentSCN = "";
		incidentType = "";

SetParameters

parameters

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\dvtelagent\DVtelAgent.dll


INSERT INTO CCTV_COMMANDS (SYSTEMCODENUMBER, COMMANDFORMAT, DATASOURCE_TYPEID, COMMAND, PARAMETERS, PRIORITY) VALUES ('CCTV010', '0', '1261', 'set_preset', '3', '0');
commit;


INSERT INTO CCTV_COMMANDS (SYSTEMCODENUMBER, COMMANDFORMAT, DATASOURCE_TYPEID, COMMAND, PARAMETERS, PRIORITY) VALUES ('CCTV010', '0', '1261', 'set_marker', 'Incident~123456', '0');
commit;


INSERT INTO CCTV_COMMANDS (SYSTEMCODENUMBER, COMMANDFORMAT, DATASOURCE_TYPEID, COMMAND, PARAMETERS, PRIORITY) VALUES ('CCTV010', '0', '1261', 'set_preset', '4', '0');
commit;


m_collectionPeriod

collectionPeriod

C:\Program Files (x86)\Imtech\Imcity\Adapters\JourneyTimeAdapter

C:\\Program Files (x86)\\Imtech\\Imcity\\Adapters

it->c_str()

pair

 bool loadConfig(string scn);

bool loadConfig(string scn);

bool loadConfig(string scn)

Camera::

 //Now attempt to load the plugin dll
  if ( !loadPlugin() )
  {
    return false;
  }

21445

CameraParameter_t

string usernam, string password, int collectionPeriod

C:\Program Files\AStyle\bin

if ( !file.read( scn.c_str(), "UpdatePeriod", m_updatePeriod, defaultUpdatePeriod ) )
  {
    LogHandler::log( "Error:  No update period specified!" );
    return false;
  }

  map<string, CameraParameter_t> cameraParameter;

typedef struct
{
	string username;
	string password;
	int collectionperiod;
}CameraParameter_t;

CameraParameter_t

const char* inifile

 //Attempt to load the settings from the ini file for this camera
    CutlasIniFile file( m_inifile );

 unsigned long updatePeriod = 1;
    if ( !file.read( scn, "UpdatePeriod", updatePeriod, 1 ) )
    {
        log( "Error:  No update period specified!" );
        return false;
    }

 //Read the camera username
    if ( !file.read( scn, "CameraUsername", m_CameraUsername ) )
    {
        sprintf( output, "Tyco Camera failed to read the username for camera '%s'", scn );
        log( output );
        return false;
    }

file.read( scn, "CameraPassword", m_CameraPassword, "" );

 CameraParameter_t cameraparameter;
    cameraparameter.collectionperiod = updatePeriod;
    cameraparameter.username = m_CameraUsername;
    cameraparameter.password = m_CameraPassword;

cameraParameters

this->cameraParameters.insert(make_pair(string(scn), cameraparameter));


 char output[512];

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\dvtelagent\DVtelAgent.dll

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\cctvAdapterd.exe

No Transport Links obtained from database

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\cctvAdapterd.exe

CameraUsername=admin
CameraPassword=9999
CameraAccessPort=80


UpdatePeriod=1

UpdatePeriod=2

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\cctvAdapterd.exe

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\dvtelagent\DVtelAgent.dll

cameraPort

CameraAccessPort

cameraPort

file.read( scn, "CameraAccessPort", cameraPort, 80);

h.pires@gilroyandbrookes.co.uk

INSERT INTO CCTV_COMMANDS (SYSTEMCODENUMBER, COMMANDFORMAT, DATASOURCE_TYPEID, COMMAND, PARAMETERS, PRIORITY) VALUES ('CCTV010', '0', '1261', 'set_preset', '3', '0');
commit;

INSERT INTO CCTV_COMMANDS (SYSTEMCODENUMBER, COMMANDFORMAT, DATASOURCE_TYPEID, COMMAND, PARAMETERS, PRIORITY) VALUES ('CCTV010', '0', '1261', 'set_preset', '1', '0');
commit;


INSERT INTO CCTV_COMMANDS (SYSTEMCODENUMBER, COMMANDFORMAT, DATASOURCE_TYPEID, COMMAND, PARAMETERS, PRIORITY) VALUES ('CCTV010', '0', '1261', 'set_preset', '3', '0');
commit;


INSERT INTO CCTV_COMMANDS (SYSTEMCODENUMBER, COMMANDFORMAT, DATASOURCE_TYPEID, COMMAND, PARAMETERS, PRIORITY) VALUES ('CCTV010', '0', '1261', 'set_marker', 'Accident~223456', '0');
commit;



INSERT INTO CCTV_COMMANDS (SYSTEMCODENUMBER, COMMANDFORMAT, DATASOURCE_TYPEID, COMMAND, PARAMETERS, PRIORITY) VALUES ('CCTV010', '0', '1261', 'set_preset', '4', '0');
commit;

C:\cctvadapter

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\DVTelInterfaceProject\ManagedDll\bin\x86\Release

%SystemRoot%\Microsoft.NET\Framework

SET PATH = "%PATH%;

C:\Windows\Microsoft.NET\Framework\v4.0.30319

D:\Oracle\product\11.2.0\dbhome_1\bin;%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;%SYSTEMROOT%\System32\WindowsPowerShell\v1.0\;C:\Utils;C:\Utils\SysInternals;%CUTLAS_HOME%\Common Files;C:\Program Files\Java\jre1.8.0_101\bin;;C:\Program Files (x86)\NTP\bin

C:\Windows\Microsoft.NET\Framework\v4.0.30319

Costa Laguna Park

C:\Secure\Source\cutlas\Core\Release\CCTVAdapter\cctvAdapter.exe

C:\Secure\Source\cutlas\Core\Release\CCTVAdapter\DVTelAgent\DVTelAgent.dll

C:\cctvadapter\cctvAdapter.exe

C:\cctvadapter\DVtelAgent.dll

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\DVTelInterfaceProject

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\DVTelInterfaceProject\TycoTestProject\bin\x86\Release

C:\Users\Daniel.Perrett\Downloads\Latitude 7.0 Installation Package

C:\Users\Administrator\Desktop\Release

f

C:\Users\Administrator\Desktop\Release

C:\Users\Daniel.Perrett\Desktop\Latitude_Update_7.0.0.5762.exe




C:\Users\Administrator\Desktop\Release

INSERT INTO CCTV_COMMANDS (SYSTEMCODENUMBER, COMMANDFORMAT, DATASOURCE_TYPEID, COMMAND, PARAMETERS, PRIORITY) VALUES ('CCTV010', '0', '1261', 'set_preset', '3', '0');
commit;

INSERT INTO CCTV_COMMANDS (SYSTEMCODENUMBER, COMMANDFORMAT, DATASOURCE_TYPEID, COMMAND, PARAMETERS, PRIORITY) VALUES ('CCTV010', '0', '1261', 'set_preset', '1', '0');
commit;


INSERT INTO CCTV_COMMANDS (SYSTEMCODENUMBER, COMMANDFORMAT, DATASOURCE_TYPEID, COMMAND, PARAMETERS, PRIORITY) VALUES ('CCTV010', '0', '1261', 'set_preset', '3', '0');
commit;


INSERT INTO CCTV_COMMANDS (SYSTEMCODENUMBER, COMMANDFORMAT, DATASOURCE_TYPEID, COMMAND, PARAMETERS, PRIORITY) VALUES ('CCTV010', '0', '1261', 'set_marker', 'Accident~223456', '0');
commit;



INSERT INTO CCTV_COMMANDS (SYSTEMCODENUMBER, COMMANDFORMAT, DATASOURCE_TYPEID, COMMAND, PARAMETERS, PRIORITY) VALUES ('CCTV010', '0', '1261', 'set_preset', '4', '0');
commit;

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\DVTelInterfaceProject

writeToLog

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\DVTelInterfaceProject\TycoTestProject\bin\x86\Release

GetInfoLog

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\DVTelInterfaceProject\TycoTestProject\bin\x86\Release

pecha kucha

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\DVTelInterfaceProject\TycoTestProject\bin\x86\Release

C:\Users\Administrator\Desktop\Release

\\192.168.11.210\daniel.perrett\DVC.exe

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\DVTelInterfaceProject\TycoTestProject\bin\x86\Release

https://en.wikipedia.org/wiki/General_Motors_EV1

m_collectionCount

CameraParameter_t

cameraParameters

m_collectionCount

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\cctvAdapterd.exe

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\dvtelagent\DVtelAgent.dll

RequestSnapShot

string username, string password, int port)

int port

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\DVTelInterfaceProject\ManagedDll\bin\x86\Release

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\DVTelInterfaceProject\ManagedDll\bin\x86\Release\ManagedDll.dll

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\DVTelInterfaceProject\ManagedDll\bin\x86\Release\ManagedDll.tlb

GetUsername

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\dvtelagent\DVtelAgent.dll

C:\Secure\Source\cutlas\Core\Release\CCTVAdapter\cctvAdapter.exe

C:\Secure\Source\cutlas\Core\Release\CCTVAdapter\DVTelAgent\DVTelAgent.dll

C:\cctvadapter

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\DVTelInterfaceProject\ManagedDll\bin\x86\Release

C:\cctvadapter\DVTelInterfaceLibrary\Release

string username, string password

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\DVTelInterfaceProject\ManagedDll\bin\x86\Release\ManagedDll.tlb

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\DVTelInterfaceProject\ManagedDll\bin\x86\Release\ManagedDll.dll

C:\Secure\Source\cutlas\Core\Release\CCTVAdapter\DVTelAgent\DVTelAgent.dll

C:\Secure\Source\cutlas\Core\Adapters\cctvAdapter\Plugins\DVTelAgent\DVTelInterfaceProject\ManagedDll\bin\x86\Release\ManagedDll.tlb

http://www.lagunapark2.com/

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\cctvAdapterd.exe

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\dvtelagent\DVtelAgent.dll

http://www.aqualand.es/costa-adeje/en/opening-hours-and-prices/

C:\Secure\Source\cutlas\Core\Release\CCTVAdapter\cctvAdapter.exe

C:\Secure\Source\cutlas\Core\Release\CCTVAdapter\DVTelAgent\DVTelAgent.dll

Sending error replies for 1 queued stanzas because of failed outgoing connection to 

24741

merseygateway

Birmingham Road, Allesley, Coventry CV5 9AL ? 

http://192.168.114.50:81/UTMS

dperrett

password01!

terminate

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\dvtelagent\DVtelAgent.dll

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\cctvAdapterd.exe

CDBInterfaceManager

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\cctvAdapterd.exe

C:\Secure\Source\cutlas\Core\Release\CCTVAdapter\cctvAdapter.exe

C:\Secure\Source\cutlas\Core\Release\CCTVAdapter\DVTelAgent\DVTelAgent.dll

C:\cctvadapter\DVtelAgent.dll

C:\cctvadapter\cctvAdapter.exe

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\cctvAdapterd.exe

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\dvtelagent\DVtelAgent.dll

 running = false;

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\dvtelagent\DVtelAgent.dll

m_terminateEvent

SetEvent(

timeoutRequest

SetEvent

m_terminateEvent

C:\Secure\Source\cutlas\Core\Debug\CCTVAdapter\dvtelagent\DVtelAgent.dll

uk-politics-38723261

Asked to verify a dialback key that was incorrect. An imposter is claiming to be 

vlan

apt-get install --only-upgrade prosody

Asked to verify a dialback key that was incorrect. An imposter is claiming to be

localhost.key

 key = "/etc/prosody/certs/xmpp.utms.uk.key";
                certificate = "/etc/prosody/certs/xmpp.utms.uk.crt";
                password = "secretxmpp";


http://localhost:5280/admin/

 http://localhost:5280/admin/

individual files in /usr/share/doc/*/copyright.


http://localhost:5280/admin/

http://localhost:5280/admin

82a65df1d840f0ec

178.62.53.98

https://startssl.com

178.62.53.98

endorsing his daughter's brands on live TV.


https://startssl.com

Error: unable to get local issuer certificate

Codinggain/GetBlog.jsp?name=dan

nggain.com:8080/AudioService/services/AudioReflect?wsdl

http://www.codinggain.com:8080/AudioService/services/AudioReflect?wsdl

-- Tyco Camera System
INSERT INTO "ADMINUTMC"."TBLCCTVFAULTTYPES" (FAULTTYPE, FAULTSEVERITY, DATASOURCE_TYPEID, FAULTDESCRIPTION) values (0,1,1261,'Camera hardware error');
INSERT INTO "ADMINUTMC"."TBLCCTVFAULTTYPES" (FAULTTYPE, FAULTSEVERITY, DATASOURCE_TYPEID, FAULTDESCRIPTION) values (1,1,1261,'Camera communications error');
INSERT INTO "ADMINUTMC"."TBLCCTVFAULTTYPES" (FAULTTYPE, FAULTSEVERITY, DATASOURCE_TYPEID, FAULTDESCRIPTION) values (2,1,1261,'Camera snap shot error');


55041-009-6375142-86427-33154120705102

merseygateway@xmpp.utms.uk 

merseygateway@xmpp.utms.uk/

merseygateway@insight.clearviewtraffic.com

Jw3^cjl3df\sr875q2

54.246.187.36



A free and open-source XMPP chat client in your browser

Converse.js is written in Javascript and runs in your browser.

You can start using it here immediately, or you can integrate it into your own website.

You can connect to any publically accessible XMPP/Jabber server, either from a public provider, or one you have set up yourself.
Don't have an XMPP/Jabber account?

No problem! With converse.js you can register an account on any public XMPP server that allows registration.
Integration

    Ruby on Rails
    Plone
    Django (option 1)
    Django (option 2)
    Roundcube
    Wordpress
    Patternslib
    Alfresco
    Friendica

Features

    Presence information (online, busy, away)
    Single-user chat
    Contacts and groups
    Multi-user chatrooms (XEP 45)
    Chatroom bookmarks (XEP 48)
    Direct invitations to chat rooms (XEP 249)
    vCard support (XEP 54)
    Service discovery (XEP 30)
    In-band registration (XEP 77)
    Roster item exchange (XEP 144)
    Custom status messages
    Typing and chat state notifications (XEP 85)
    Desktop notifications
    Messages appear in all connected chat clients (XEP 280)
    Third person "/me" messages (XEP 245)
    XMPP Ping (XEP 199)
    Server-side archiving of messages (XEP 313)
    Client state indication (XEP 352)
    Off-the-record encryption
    Supports anonymous logins, see the anonymous login demo.
    Translated into 16 languages

Screencasts

    In a Plone site
    Chatting with buddies from Jabber.org and Gmail
    Off-the-record encryption

Contact

    Follow me on Twitter or chat with me via XMPP at jc@opkode.com.
    For technical support, you can ask on Stack Overflow or if you have a more simple question you can ask us in the Converse.js chat room: discuss@conference.conversejs.org.
    Please file bugs on Github.
    I'm available for paid-for features, custom development and consulting. Here's my contact form.

Converse.js is supported by KeyCDN


merseygateway@insight.clearviewtraffic.com

Jw3^cjl3df\sr875q2

merseygateway@insight.clearviewtraffic.com

/home/daniel.perrett/development/imcitydevelopment/3-Workspace

Jw3^cjl3df\sr875q2

./imtech/myadapter/config/ClearviewCounterAdapter.ini

Jw3^cjl3df\sr875q2




Jw3^cjl3df\sr875q2

ifpossible

Jw3^cjl3df\sr875q2

required

https://www.kimsufi.com/uk/servers.xml

XMPPPassWord=imcity

Jw3^cjl3df\sr875q2

insight.clearviewtraffic.com

username

true

The following addresses failed: 'insight.clearviewtraffic.com:5222' failed because java.net.ConnectException: Connection refused: connect

I

insight.clearviewtraffic.com


The Adapter uses an interface library written in C# which connects to the Tyco Server. This C# library has been exported as a COM object which will enable it to be loaded into the current ImCity CCTV Adapter Framework. 

Install FLIR(DVTel) Latitude software V7.0.0 Minimum required will be the SDK libraries

installing the update package, Latitude V7.0.0.57 which will update this release.

import tigase.jaxmpp.j2se.Jaxmpp

import tigase.jaxmpp.j2se.connectors.bosh.BoshConnector
import tigase.jaxmpp.core.client.SessionObject
import tigase.jaxmpp.core.client.JID
import tigase.jaxmpp.core.client.BareJID
import tigase.jaxmpp.j2se.ConnectionConfiguration

final Jaxmpp contact = new Jaxmpp();

import tigase.jaxmpp.j2se.Jaxmpp;

contact.getModulesManager().getModule( PresenceModule.class ).addListener( PresenceModule.ContactChangedPresence, new Listener<PresenceModule.PresenceEvent>() {

            @Override
            public void handleEvent( PresenceEvent be ) throws JaxmppException {
                System.out.println( String.format( "Presence received:\t %1$s is now %2$s (%3$s)", be.getJid(), be.getShow(), be.getStatus() != null ? be.getStatus() : "none" ) );
            }
        } );

import tigase.jaxmpp.core.client.BareJID;
import tigase.jaxmpp.core.client.SessionObject;
import tigase.jaxmpp.core.client.exceptions.JaxmppException;
import tigase.jaxmpp.core.client.observer.Listener;
import tigase.jaxmpp.core.client.xmpp.modules.presence.PresenceModule;
import tigase.jaxmpp.core.client.xmpp.modules.presence.PresenceModule.PresenceEvent;

 contact.getProperties().setUserProperty( SessionObject.USER_BARE_JID, BareJID.bareJIDInstance( "user@domain" ) );
        contact.getProperties().setUserProperty( SessionObject.PASSWORD, "pass" );

merseygateway@insight.clearviewtraffic.com

Jw3^cjl3df\sr875q2

contact.login();

 jaxmpp.addListener(SocketConnector.StanzaReceived, new Listener<SocketConnector.ConnectorEvent>() {

                        public void handleEvent(ConnectorEvent be) throws JaxmppException {
                                log.info("RECEIVED: " + be.getStanza().getAsString());
                        }

                });

jaxmpp.getSessionObject().setUserProperty(JaxmppCore.AUTOADD_STANZA_ID_KEY, true);

                jaxmpp.addListener(SocketConnector.StanzaReceived, new Listener<SocketConnector.ConnectorEvent>() {

                        public void handleEvent(ConnectorEvent be) throws JaxmppException {
                                log.info("RECEIVED: " + be.getStanza().getAsString());
                        }

                });

contact

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import tigase.jaxmpp.core.client.AsyncCallback;
import tigase.jaxmpp.core.client.BareJID;
import tigase.jaxmpp.core.client.Connector;
import tigase.jaxmpp.core.client.Connector.ConnectorEvent;
import tigase.jaxmpp.core.client.JID;
import tigase.jaxmpp.core.client.JaxmppCore;
import tigase.jaxmpp.core.client.PacketWriter;
import tigase.jaxmpp.core.client.exceptions.JaxmppException;
import tigase.jaxmpp.core.client.observer.Listener;
import tigase.jaxmpp.core.client.xml.DefaultElement;
import tigase.jaxmpp.core.client.xml.Element;
import tigase.jaxmpp.core.client.xmpp.modules.jingle.JingleModule;
import tigase.jaxmpp.core.client.xmpp.modules.jingle.JingleModule.JingleSessionInitiationEvent;
import tigase.jaxmpp.core.client.xmpp.modules.jingle.JingleModule.JingleSessionTerminateEvent;
import tigase.jaxmpp.core.client.xmpp.stanzas.Stanza;
import tigase.jaxmpp.j2se.Jaxmpp;
import tigase.jaxmpp.j2se.connectors.socket.SocketConnector;

Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
         

prosody.log.1

163

contact.sendMessage(JID.jidInstance("

configBuilder.setUsernameAndPassword(UserName, PassWord);

configBuilder.setConnectTimeout(20000);

ifpossible

 failed because java.net.ConnectException: Connection refused: connect

connection

   PingManager pingmanager = PingManager.getInstanceFor(connection);
	    pingmanager.se

D:\3-Workspace\ImCityAdapters\jaxmpp-dist-3.1.4

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import tigase.jaxmpp.core.client.AsyncCallback;
import tigase.jaxmpp.core.client.BareJID;
import tigase.jaxmpp.core.client.Connector;
//import tigase.jaxmpp.core.client.Connector.ConnectorEvent;
import tigase.jaxmpp.core.client.JID;
import tigase.jaxmpp.core.client.JaxmppCore;
import tigase.jaxmpp.core.client.PacketWriter;
import tigase.jaxmpp.core.client.SessionObject;
import tigase.jaxmpp.core.client.exceptions.JaxmppException;
//import tigase.jaxmpp.core.client.observer.Listener;
import tigase.jaxmpp.core.client.xml.DefaultElement;
import tigase.jaxmpp.core.client.xml.Element;
import tigase.jaxmpp.core.client.xmpp.modules.jingle.JingleModule;
//import tigase.jaxmpp.core.client.xmpp.modules.jingle.JingleModule.JingleSessionInitiationEvent;
//import tigase.jaxmpp.core.client.xmpp.modules.jingle.JingleModule.JingleSessionTerminateEvent;
import tigase.jaxmpp.core.client.xmpp.stanzas.Stanza;
import tigase.jaxmpp.j2se.Jaxmpp;
import tigase.jaxmpp.j2se.connectors.socket.SocketConnector;

final Jaxmpp contact = new Jaxmpp();
	    
		contact.getProperties().setUserProperty( SessionObject.USER_BARE_JID, BareJID.bareJIDInstance( "merseygateway@insight.clearviewtraffic.com" ) );
	    contact.getProperties().setUserProperty( SessionObject.PASSWORD, "Jw3^cjl3df\\sr875q2" );

// TODO Auto-generated method stub

 try 
	    {
			contact.login();
		}
	    catch (JaxmppException e) 
	    {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

stanza

JID.jidInstance("dan@codinggain.com", "TEst", "This is a test")

"dan@codinggain.com", "test", "resource")

jid

final Jaxmpp contact = new Jaxmpp();
	    
		contact.getProperties().setUserProperty( SessionObject.USER_BARE_JID, BareJID.bareJIDInstance( "merseygateway@insight.clearviewtraffic.com" ) );
	    contact.getProperties().setUserProperty( SessionObject.PASSWORD, "Jw3^cjl3df\\sr875q2" );
	    try 
	    {
			contact.login();
		}
	    catch (JaxmppException e) 
	    {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	    Stanza stan;
		try 
		{
			stan = Stanza.createMessage();
			stan.setTo(JID.jidInstance("dan@codinggain.com", "test", "resource"));
			stan.setFrom(JID.jidInstance("merseygateway@insight.clearviewtraffic.com"));
		
		    contact.send(stan);
		}
		catch (JaxmppException e) 
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

contact.se

merseygatewat


import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import tigase.jaxmpp.core.client.AsyncCallback;
import tigase.jaxmpp.core.client.BareJID;
import tigase.jaxmpp.core.client.Connector;
//import tigase.jaxmpp.core.client.Connector.ConnectorEvent;
import tigase.jaxmpp.core.client.JID;
import tigase.jaxmpp.core.client.JaxmppCore;
import tigase.jaxmpp.core.client.PacketWriter;
import tigase.jaxmpp.core.client.SessionObject;
import tigase.jaxmpp.core.client.exceptions.JaxmppException;
//import tigase.jaxmpp.core.client.observer.Listener;
import tigase.jaxmpp.core.client.xml.DefaultElement;
import tigase.jaxmpp.core.client.xml.Element;
import tigase.jaxmpp.core.client.xmpp.modules.jingle.JingleModule;
//import tigase.jaxmpp.core.client.xmpp.modules.jingle.JingleModule.JingleSessionInitiationEvent;
//import tigase.jaxmpp.core.client.xmpp.modules.jingle.JingleModule.JingleSessionTerminateEvent;
import tigase.jaxmpp.core.client.xmpp.stanzas.Stanza;
import tigase.jaxmpp.j2se.Jaxmpp;
import tigase.jaxmpp.j2se.connectors.socket.SocketConnector;


"Jw3^cjl3df\\sr875q2"

verifier

getConfiguration

 HostnameVerifier verifier = 

HostnameVerifier hostnameVerifier=new HostnameVerifier(){
    @Override public boolean verify(    String arg0,    SSLSession arg1){
      return true;
    }

| SmackException | IOException | XMPPException e

org.jivesoftware.smack.tcp.XMPPTCPConnection.connectUsingConfiguration(XMPPTCPConnection.java:609)

 java.lang.IllegalStateException: org.xmlpull.v1.XmlPullParserException: could not load any factory class (even small or full default implementation); nested exception is: 
	org.kxml2.io.XmlReader

at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at org.jivesoftware.smack.SmackInitialization.loadSmackClass(SmackInitialization.java:213)
	at org.jivesoftware.smack.SmackInitialization.parseClassesToLoad(SmackInitialization.java:193)
	at org.jivesoftware.smack.SmackInitialization.processConfigFile(SmackInitialization.java:163)
	at org.jivesoftware.smack.SmackInitialization.processConfigFile(SmackInitialization.java:148)
	at org.jivesoftware.smack.SmackInitialization.<clinit>(SmackInitialization.java:116)
	at org.jivesoftware.smack.SmackConfiguration.getVersion(SmackConfiguration.java:96)
	at org.jivesoftware.smack.ConnectionConfiguration.<clinit>(ConnectionConfiguration.java:38)

Jaxmpp

type

MessageModule.MessageReceivedHandler.MessageReceivedEvent.class,
        new MessageModule.MessageReceivedHandler() {

            @Override
            public void onMessageReceived(SessionObject sessionObject, Chat chat, Message stanza) {
                System.out.println("message: " + stanza.getBody());
            }
        });


millis

// TODO Auto-generated method stub

 System.out.println("message: " + stanza.getBody());

13742

 contact.getModule(MessageModule.class).sendMessage(JID.jidInstance("tigase1@atlantiscity"), "Test", "This is a test")

tigase1

getModulesManager().getModule(MessageModule.class);

jaxmppl

contact

if(jaxmpp1.isConnected())
	    		{
	    			
	    			 catch(Exception ex)
	    			 {
	    				 ex.printStackTrace();
	    			 }
	    		}

final Jaxmpp contact = new Jaxmpp();

import tigase.jaxmpp.core.client.BareJID;
//import tigase.jaxmpp.core.client.Connector.ConnectorEvent;
import tigase.jaxmpp.core.client.JID;
import tigase.jaxmpp.core.client.SessionObject;
import tigase.jaxmpp.core.client.exceptions.JaxmppException;
import tigase.jaxmpp.core.client.xml.XMLException;
import tigase.jaxmpp.core.client.xmpp.modules.adhoc.AdHocCommansModule;
import tigase.jaxmpp.core.client.xmpp.modules.chat.Chat;
import tigase.jaxmpp.core.client.xmpp.modules.chat.MessageCarbonsModule;
import tigase.jaxmpp.core.client.xmpp.modules.chat.MessageModule;
import tigase.jaxmpp.core.client.xmpp.modules.muc.MucModule;
import tigase.jaxmpp.core.client.xmpp.modules.pubsub.PubSubModule;
import tigase.jaxmpp.core.client.xmpp.modules.registration.InBandRegistrationModule;
import tigase.jaxmpp.core.client.xmpp.modules.roster.RosterModule;
import tigase.jaxmpp.core.client.xmpp.modules.xep0136.MessageArchivingModule;
import tigase.jaxmpp.core.client.xmpp.stanzas.Message;
import tigase.jaxmpp.j2se.Jaxmpp;



public class XmppTest {

	public static void main(String[] args) 
	{
		
		Jaxmpp jaxmpp1 = new tigase.jaxmpp.j2se.Jaxmpp();
		jaxmpp1.getModulesManager().register(new InBandRegistrationModule());
		jaxmpp1.getModulesManager().register(new MessageModule());
		try {
			jaxmpp1.getModulesManager().register(new MessageCarbonsModule());
		} catch (JaxmppException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		jaxmpp1.getModulesManager().register(new MucModule());
		jaxmpp1.getModulesManager().register(new AdHocCommansModule());
		jaxmpp1.getModulesManager().register(new RosterModule());
		jaxmpp1.getModulesManager().register(new MessageArchivingModule());
		jaxmpp1.getModulesManager().register(new PubSubModule());
		try {
			tigase.jaxmpp.j2se.Roster.initialize(jaxmpp1);
			tigase.jaxmpp.j2se.Presence.initialize(jaxmpp1);
		} catch (JaxmppException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		
		
		jaxmpp1.getProperties().setUserProperty( SessionObject.USER_BARE_JID, BareJID.bareJIDInstance( "merseygateway@insight.clearviewtraffic.com" ) );
		jaxmpp1.getProperties().setUserProperty( SessionObject.PASSWORD, "Jw3^cjl3df\\sr875q2" );
	    
		

	    try 
	    {
	    	jaxmpp1.login(true);
		}
	    catch (JaxmppException e) 
	    {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	    jaxmpp1.getEventBus().addHandler(MessageModule.MessageReceivedHandler.MessageReceivedEvent.class,
	            new MessageModule.MessageReceivedHandler() {

	             
	    			@Override
	    			public void onMessageReceived(SessionObject sessionObject, Chat chat, Message stanza) 
	    			{
	    				 try 
	    				 {
	    					System.out.println(stanza.getBody());
	    				} catch (XMLException e) {
	    					// TODO Auto-generated catch block
	    					e.printStackTrace();
	    				}
	    				
	    			}
	            });
	    try
		 {
			 MessageModule module = jaxmpp1.getModulesManager().getModule(MessageModule.class);
			 module.sendMessage(JID.jidInstance("dperrett@tigase.im"), "Test", "This is a test");		
		} 
		catch (JaxmppException e) 
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	    
	    while(true)
	    {
	    	try 
	    	{
	    		
				Thread.sleep(1000);
			}
	    	catch (InterruptedException e) 
	    	{
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	    }
	    

	}

}

try 
	    				 {
	    					System.out.println(stanza.getBody());
	    				} catch (XMLException e) {
	    					// TODO Auto-generated catch block
	    					e.printStackTrace();
	    				}

IClearviewFaultInterface

import dynniq.imcity.clearview.support.FaultInformation;
import dynniq.imcity.clearview.support.FaultMessageType;
import dynniq.imcity.clearview.support.FaultTypeTable;

import java.text.SimpleDateFormat;
import java.util.*;
import java.io.*;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;

19618

	private final static Logger logger = LogManager.getLogger(ClearviewXMPPInterface.class);
	org.apache.logging.log4j.Level logLevel = org.apache.logging.log4j.Level.ALL;
	private ClearviewAdapterStatus adapterStatus = ClearviewAdapterStatus.GetInstance();

private int port = 5222;
	private String UserName = "";
	private String PassWord = "";
	private boolean connected = false;

Jaxmpp jaxmpp1 = new tigase.jaxmpp.j2se.Jaxmpp();

import tigase.jaxmpp.core.client.BareJID;
//import tigase.jaxmpp.core.client.Connector.ConnectorEvent;
import tigase.jaxmpp.core.client.JID;
import tigase.jaxmpp.core.client.SessionObject;
import tigase.jaxmpp.core.client.exceptions.JaxmppException;
import tigase.jaxmpp.core.client.xml.XMLException;
import tigase.jaxmpp.core.client.xmpp.modules.adhoc.AdHocCommansModule;
import tigase.jaxmpp.core.client.xmpp.modules.chat.Chat;
import tigase.jaxmpp.core.client.xmpp.modules.chat.MessageCarbonsModule;
import tigase.jaxmpp.core.client.xmpp.modules.chat.MessageModule;
import tigase.jaxmpp.core.client.xmpp.modules.muc.MucModule;
import tigase.jaxmpp.core.client.xmpp.modules.pubsub.PubSubModule;
import tigase.jaxmpp.core.client.xmpp.modules.registration.InBandRegistrationModule;
import tigase.jaxmpp.core.client.xmpp.modules.roster.RosterModule;
import tigase.jaxmpp.core.client.xmpp.modules.xep0136.MessageArchivingModule;
import tigase.jaxmpp.core.client.xmpp.stanzas.Message;
import tigase.jaxmpp.j2se.Jaxmpp;


D:\3-Workspace\ImCityAdapters\jaxmpp-dist-3.1.4

jaxmpp1.getModulesManager().register(new InBandRegistrationModule());
		jaxmpp1.getModulesManager().register(new MessageModule());
		try {
			jaxmpp1.getModulesManager().register(new MessageCarbonsModule());
		} catch (JaxmppException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		jaxmpp1.getModulesManager().register(new MucModule());
		jaxmpp1.getModulesManager().register(new AdHocCommansModule());
		jaxmpp1.getModulesManager().register(new RosterModule());
		jaxmpp1.getModulesManager().register(new MessageArchivingModule());
		jaxmpp1.getModulesManager().register(new PubSubModule());
		
		try 
		{
			tigase.jaxmpp.j2se.Roster.initialize(jaxmpp1);
			tigase.jaxmpp.j2se.Presence.initialize(jaxmpp1);
		}
		catch (JaxmppException e1) 
		{
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}

jaxmpp1.getProperties().setUserProperty( SessionObject.USER_BARE_JID, BareJID.bareJIDInstance( "merseygateway@insight.clearviewtraffic.com" ) );
		jaxmpp1.getProperties().setUserProperty( SessionObject.PASSWORD, "Jw3^cjl3df\\sr875q2" );

UserName

MessageModule.MessageReceivedHandler() {

					public void onMessageReceived(SessionObject sessionObject,
							Chat chat, Message stanza) 
					{
						try 
	    				{
	    					System.out.println(stanza.getBody());
	    				} 
						catch (XMLException e) 
						{
	    					// TODO Auto-generated catch block
	    					e.printStackTrace();
	    				}
						
					}

MessageModule.MessageReceivedHandler

messageHandler

jaxmpp1.getEventBus().addHandler(MessageModule.MessageReceivedHandler.MessageReceivedEvent.class,

messageHandler

ClearviewXMPPTigaseClientInterface

Properties config

		logger.log(logLevel,"ClearviewXMPPInterface");
		clearviewMonitor = new ClearViewHttpMonitor();
		Enumeration<?> en = config.keys();
		//get right config for this 
		while (en.hasMoreElements()) 
		{
			String key  = (String) en.nextElement();
			String keyStr = config.getProperty(key);
			System.out.println(key + ":" + keyStr);
			switch(key)
			{
				case "datasourcetypeid":
					datasourcetypeid =  keyStr;
					break;
			    case "ClearviewUrl":
			    	clearviewMonitor.http = keyStr;
				break;
			    case "ClearViewUserName":
			    	clearviewMonitor.UserName = keyStr;
			    	break;
			    case "ClearViewPassword":
			    	clearviewMonitor.Password = keyStr;
			    	break;
			    case "ClearviewStartTime":
			    	clearviewMonitor.StartTime = keyStr;
			    	break;
			    case "ClearviewEndTime":
			    	clearviewMonitor.EndTime = keyStr;
			    	break;
				case "XMPPFromJID":
					subscribeTo = keyStr;
					break;
				case "XMPPServiceName":
					xmppServiceName = keyStr;
					break;
				case "XMPPServer":
					xmppHostName = keyStr;
					break;
				case "XMPPUserName":
					UserName = keyStr;
					break;
				case "XMPPPassWord":
					PassWord = keyStr;
					break;
				case "XMPPPort":
					try
					{
						port = Integer.parseInt(keyStr);
					}
					catch(Exception ex)
					{
						port = 5222;
					}
					break;
				case "XMPPFromDevice":
					XMPPFromDevice = keyStr;
					break;
			}
		}//while
		
		Date time = new Date();
		timeLastReceived = time.getTime();
		
		//Start up timer
		if(!clearviewMonitor.http.equals(""))
		{
			MonitorTimer = new Timer();
			MonitorTimer.schedule(new XMPPMonitorTimer(), 0, 1*60*1000);
		}
		
		adapterStatus.setStatus("Waiting on Endpoint");
		//try to subscribe to alerts if not already, if we are this will be ignored
		subscribe = new Presence(Presence.Type.subscribe);	
	    subscribe.setTo(subscribeTo);  

private String xmppHostName = "";
	private String xmppServiceName = "";
	private String XMPPFromDevice = "";

private String datasourcetypeid = "";
	private int connectionAttempts = 0;

private String subscribeTo = "";

	private long timeLastReceived; 

jaxmpp1.isConnected()

try
		 {
	    	
			 MessageModule module = jaxmpp1.getModulesManager().getModule(Mess

String From = arg1.getFrom();
		//	System.out.println("From: " + From);
			String message = arg1.getBody();

stanza

String[] split = From.split("/");
			if(split[0].equals(subscribeTo) && (message != null))
			{
				try 
				{
					BufferedWriter bw = new BufferedWriter(new FileWriter("data.dat", true));
					bw.write(arg1.getBody());
					bw.newLine();
					bw.flush();
					bw.close();
					logger.log(logLevel, arg1.getBody());
				}
				catch (IOException e) 
				{
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

					catch (IOException e)

stanza

ClearviewXMPPTigaseClientInterface

xmppInterface

ClearviewXMPPTigaseClientInterface

ReceivedInformation(arg1.getBody());

insight.clearviewtraffic.com

jaxmpp1.getProperties().setUserProperty(SessionObject., value)

		Date timeReceived = new Date();
		boolean SendToImcity = true;
		FaultInformation fault = new FaultInformation();
		fault.messageType = FaultMessageType.CreateFault;
		fault.Fault = datasourcetypeid;
		String[] contents = information.split("\n");
	
		timeLastReceived = timeReceived.getTime();
		fault.TimeReceived = timeReceived.toString();
		
		for(String str: contents)
		{
			String[] keyValue = str.split(":");
			switch(keyValue[0])
			{
			case "Device":
				fault.Device = keyValue[1].trim();
				break;
			case "Category":
				fault.Category = keyValue[1].trim();
				break;
			case "Type":
				try
				{
					String type = keyValue[1].replaceAll("\\s+", "").replaceAll("/", "");
					fault.type = FaultTypeTable.valueOf(type);
				}
				catch(Exception ex)
				{
					fault.type = FaultTypeTable.Unknown;
					SendToImcity = false;
				}
				break;
			case "Time":
				fault.Time = keyValue[1].trim() + ":" + keyValue[2].trim() + ":" + keyValue[3].trim();
				break;
			case "End Time":
				fault.messageType = FaultMessageType.ClearFault;
				fault.EndTime = keyValue[1].trim() + ":" + keyValue[2].trim() + ":" + keyValue[3].trim();
				break;
			}
		}
		
		if(SendToImcity && (fault.Category != ""))
		{
			inputManager.ReceivedMessage(fault, id);
		}

private ClearviewCounterFaultInputManager inputManager = null;

inputManager

inputManager = inputObject;

private long timeLastReceived; 

	private int id;

https://localhost/node/414

String device = "";
				if(keyValue[1].trim().contains("MB_Test_1"))
				{
					device = "CLC001";
				}
				else if(keyValue[1].trim().contains("MB_Test_2"))
				{
					device = "CLC002";
				}
				else if(keyValue[1].trim().contains("MB_Test_3"))
				{
					device = "CLC003";
				}
				fault.Device = device;

getEventBus().addHandler(PresenceModule.ContactChangedPresenceHandler.ContactChangedPresenceEvent.class, new PresenceModule.ContactChangedPresenceHandler() {
    @Override
    void onContactChangedPresence(SessionObject sessionObject, Presence stanza, JID jid, Presence.Show show, String status, Integer priority) throws JaxmppException {
        System.out.println("Presence received:\t" + jid + " is now " + show + " (" + status + ")");

    }
});

new PresenceModule.ContactChangedPresenceHandler() {
	        @Override
	        public void onContactChangedPresence(SessionObject sessionObject, Presence stanza, JID jid, Presence.Show show, String status, Integer priority) throws JaxmppException {
	            System.out.println("Presence received:\t" + jid + " is now " + show + " (" + status + ")");

	        }
	    });

 System.out.println("Presence received:\t" + jid + " is now " + show + " (" + status + ")");

 def presenceModule = contact.getModulesManager().getModule(PresenceModule.class);
    presenceModule.sentDirectPresence(JID.jidInstance("tigase2@atlantiscity/Psi+"), Presence.Show.away, "new status", 65);

contact

alerts@insight.clearviewtraffic.com

jaxmpp1.getEventBus().addHandler(PresenceModule.ContactChangedPresenceHandler.ContactChangedPresenceEvent.class, new PresenceModule.ContactChangedPresenceHandler() {
	        @Override
	        public void onContactChangedPresence(SessionObject sessionObject, Presence stanza, JID jid, Presence.Show show, String status, Integer priority) throws JaxmppException {
	            System.out.println("Presence received:\t" + jid + " is now " + show + " (" + status + ")");

	        }
	    });

 PresenceModule presenceModule = jaxmpp1.getModulesManager().getModule(PresenceModule.class);
	    	    presenceModule.subscribe(JID.jidInstance("dperrett@tigase.im"));

jaxmpp1.getEventBus().addHandler(PresenceModule.ContactChangedPresenceHandler.ContactChangedPresenceEvent.class,

presence

import tigase.jaxmpp.core.client.xmpp.modules.presence.PresenceModule;

tigase.jaxmpp.core.client.xmpp.modules.presence

PresenceModule presenceModule = jaxmpp1.getModulesManager().getModule(PresenceModule.class);
			    	presenceModule.subscribe(JID.jidInstance("alerts@insight.clearviewtraffic.com"));

PresenceModule presenceModule = jaxmpp1.getModulesManager().getModule(PresenceModule.class);
	    	    presenceModule.subscribe(JID.jidInstance("dperrett@tigase.im"));

XMPPFromDevice

subscribeTo

	Date time = new Date();
			String from = arg0.getFrom();
			String name = arg0.getType().name();
			System.out.println(time.toString() + ":Presence Changed: " + arg0.getStatus() + ":" + from + ":" + name);
			//System.out.println(subscribeTo);
			String[] split = from.split("/");
			boolean process = false;
			if(split.length == 2)
			{
				if(split[0].equals(subscribeTo) && split[1].equals(XMPPFromDevice))
				{
					process = true;
				}
			}
			else
			{
				if(from.equals(subscribeTo))
				{
					process = true;
				}
			}
			
			if(process)
			{
				if (name == "available")
				{
					SubscribedAvailability = true;
					adapterStatus.setStatus("OK");
					clearUnavailableFault();
				}
				else if(name == "unavailable")
				{
					adapterStatus.setStatus("Endpoint Unavailable");
					createUnavailableFault("Clearview Presence has Disappeared");
					SubscribedAvailability = false;
				}
			
			}

	String from = stanza.getFrom().toString();
				String name = stanza.getType().name();
			

//

SubscribedAvailability

System.out.println(time.toString() + ":Presence Changed: " + stanza.getStatus() + ":" + from + ":" + name);

	/*
	 * clearUnavalableFault()
	 * created if clearview client comes back on line 
	 */
	public void clearUnavailableFault()
	{
		logger.log(logLevel, "clearUnavalableFault");
		if(unavailableFaultRaised)  //lets clear them
		{
			if(unavailableFault != null)
			{
				Date time = new Date();
				unavailableFault.subsystemFault = true;
				unavailableFault.Fault = datasourcetypeid;
				unavailableFault.messageType = FaultMessageType.ClearFault;
				unavailableFault.EndTime = time.toString();
				inputManager.ReceivedMessage(unavailableFault, id);
				unavailableFault = null;
			}
			unavailableFaultRaised = false;
		}
	}
	
	/*
	 * createUnavaliableFault()
	 * if the clearview client disappears raise this error 
	 */
	public void createUnavailableFault(String description)
	{
		logger.log(logLevel, "createUnavailableFault");
		if(!unavailableFaultRaised)
		{
			String date = "";
			unavailableFault = new FaultInformation();
			unavailableFault.subsystemFault = true;
			unavailableFault.Fault = datasourcetypeid;
			unavailableFault.messageType = FaultMessageType.CreateFault;
			unavailableFault.Description = description;
			unavailableFault.Device = "InsightDetector";
			SimpleDateFormat sdf = new SimpleDateFormat( "yyyy-MM-dd HH:mm:ss" );
			Date time = new Date();
			date = sdf.format(time);
			unavailableFault.Time = date;
			inputManager.ReceivedMessage(unavailableFault, id);
			unavailableFaultRaised = true;
		}
		else
		{
			logger.log(logLevel, "falut already raised");
		}
	}


private FaultInformation unavailableFault = null;

	private boolean unavailableFaultRaised = false;
	private FaultInformation unavailableFault = null;

https://www.youtube.com/watch?v=08083BNaYcA

D:\3-Workspace\ImCityAdapters\ClearviewCounterAdapter\deploy\Plugins\ClearviewCounterAdapter.jar

1.0.0

C:\imtech\ClearviewCounterAdapter.zip

-Dmyprocessname

logger.log(logLevel, stanza.getBody());

keyValue[1].trim()

if(fault.type == FaultTypeTable.LoopSensorFailure) //loop sensor fail record the extra parameters
					{
						String sensors = contents[contents.length-1];
						fault.Description = "Sensors down: " + sensors; 
					}

xmppHostName

keyValue[1]

	System.out.println(fault.Description);

System.out.println("")

Device: KLtest https://localhost/node/1206
Category: Device Faults
Type: GPRS/Ethernet Connection Failure
Time: 2017-02-17 15:34:33

.trim()

daniel.perrett@dynniq.co.uk

	NotConnected,
	PowerFailure,
	ChargerFailure,
	BatteryLow,
	LoopSensorFailure,
	EthernetCardShutdown,
	DeviceResetting,
	TimingError,
	WatchdogReset,
	DeviceInitialising,
	NoData,
	MissingData,
	CSDRequestFailure,
	GPRSEthernetConnectionFailure, 

https://insight.clearviewtraffic.com/api/feed/FEED_ID/FORMAT

8274

https://insight.clearviewtraffic.com 

merseybridge

XKxEff8fUxQ9XVn

String device = keyValue[1].split("https:")[0].trim().substr

String device = "";

XKxEff8fUxQ9XVn

C:\imtech\ClearviewCounterAdapter\ClearviewCounterAdapter_1.0.0.jar

t

.

SEVERE: Can't establish encrypted connection
javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake
        at sun.security.ssl.SSLSocketImpl.readRecord(Unknown Source)
        at sun.security.ssl.SSLSocketImpl.performInitialHandshake(Unknown Source)
        at sun.security.ssl.SSLSocketImpl.startHandshake(Unknown Source)
        at sun.security.ssl.SSLSocketImpl.startHandshake(Unknown Source)
        at tigase.jaxmpp.j2se.connectors.socket.SocketConnector.proceedTLS(SocketConnector.java:394)
        at tigase.jaxmpp.j2se.connectors.socket.SocketConnector.onTLSStanza(SocketConnector.java:317)

-Dhttps.protocols=TLSv1.1,TLSv1.2

