Ali Mahdmina 

.im/

package dynniq.imcity.myAdapter;

import imtech.imcity.cdb.CDBConstant;

	private final static Logger logger = LogManager.getLogger(myAdapterMain.class);


/*
 * Copyright Imtech Traffic & Infra. 2014                           
 * All rights reserved
 */
/**
 * Stand alone task.
 * 
 * This class is intended to be the pattern by which objects are marshaled into documents.
 * 
 */
package dynniq.imcity.myAdapter;

import imtech.imcity.cdb.CDBConstant;
import imtech.imcity.cdb.CDBUtility;
import dynniq.imcity.myAdapter.support.AdapterConstant;
import dynniq.imcity.myAdapter.support.AdapterUtility;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Enumeration;
import java.util.Properties;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;


ImCityCORBA_1_0_0.jar

D:\myAdapter\plugins\ImCityCORBA_1_0_0.jar

D:\myAdapter

ClearviewCounterAdapter

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Enumeration;
import java.util.Properties;

public ProcessorActionThread(Properties configArgsIn) 
		{
			configArgsThread = configArgsIn;
		}

ClearviewFaultThread

FaultInformation

InboundQueueInstance

YYYY-MM-DD HH:MM::SS

InboundFaultQueue

	public String From = "";
	public String To = "";
	public int ID = 0;
	public String Device = "";
	public String Fault = "";
    public FaultTypeTable type = FaultTypeTable.NotConnected;
    public String Time = ""; //YYYY-MM-DD HH:MM::SS
    public String EndTime = ""; //YYYY-MM-DD HH:MM::SS

(String From, 
			         String To, 
			         int ID, 
			         String Device, 
			         String Fault, 
			         FaultTypeTable type, 
			         String Time, //YYYY-MM-DD HH:MM::SS
                     String EndTime //YYYY-MM-DD HH:MM::SS
                     )

InboundFaultQueue

if(lock.tryLock())
			{

ClearviewFaultThread

InboundFaultQueue

	private final Logger loggerT = LogManager.getLogger(ProcessorActionThread.class);

ClearviewFaultThread

InboundFaultQueue

inboundQueue

InboundFaultQueue

clearviewFaultThread

CDBConstant.MAINHTREADPRIORITY

clearviewFaultThread.

(Properties configArgsIn)

ClearviewFaultXMPPInterface

@Override
		public void run() 
		{
			startClient();
		}

private void startClient() 
		{
			boolean startClient = true;
			while (isRunState()) 
			{

configArgs

// This thread BLOCKS in the adapter class
				if (startClient) 
				{

CDBUtility.sleeping(CDBConstant.IDLEWAIT);

